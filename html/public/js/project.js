angular.module('project',[]).
  config(function($routeProvider) {
    $routeProvider.
      when('/', {controller:ListCtrl, templateUrl:'list.html'}).
      when('/q/:quizId', {controller:TakeQuiz, templateUrl:'detail.html'}).
      //when('/new', {controller:CreateCtrl, templateUrl:'detail.html'}).
      otherwise({redirectTo:'/'});
  }).service('quizData', function(){
    return[{
      "label": "image",
      "questions": [
        {
          "label": "What is a subtractive color model that stands for Cyan, Magenta, Yellow, and Black?",
          "answer": "CMYK",
          "noise": ["RGB", "TWAIN", "CMS"]
        },
        {
          "label": "What is an additive color model and stands for Red, Green, and Blue?",
          "answer": "RGB",
          "noise": ["CMYK", "ASCII", "DHTML"]
        },
        {
          "label": "The bit depth for four colors is always __ bits.",
          "answer": "3",
          "noise": ["2", "8", "4"]
        },
        {
          "label": "4,000 pixels x 2,000 pixels =  ____ Megapixels.",
          "answer": "8",
          "noise": ["800", "8000", "6"]
        },
        {
          "label": "An 8-bit color depth allows _____ colors.",
          "answer": "256",
          "noise": ["8", "128", "1024"]
        },
        {
          "label": "Approximately, what will happen to the file size if the total number of pixels of an image is doubled?",
          "answer": "the file size doubles",
          "noise": ["the file size triples", "the file size will be half", "the file size will quadruple"]
        },
        {
          "label": "What does HSB stand for?",
          "answer": "Hue, Saturation, and Brightness",
          "noise": ["Hypertext, Sampling, and Bytes", "Hue, Sampling, and Boolean", "Histogram, Saturation, and Bitmap"]
        },
        {
          "label": "The term ________ comes from abridging the words: compressor and decompressor.",
          "answer": "codec",
          "noise": ["chrominance", "complementary", "compilation"]
        },
        {
          "label": "The term pixel stands for picture _________.",
          "answer": "element",
          "noise": ["extension", "expression", "envelope"]
        },
        {
          "label": "A ___________ of an image is a bar chart that shows the relative number of pixels plotted against a color value.",
          "answer": "histogram",
          "noise": ["histology", "hierarchy", "pixelation"]
        }
      ]
    },
      {
        "label": "audio",
        "questions": [
          {
            "label": "A ________________ microphone is most sensitive to the sound coming from the front.",
            "answer": "unidirectional",
            "noise": ["unicorn", "MIDI", "amplitude"]
          },
          {
            "label": "A sound with higher _____ is perceived to have a higher pitch.",
            "answer": "frequency",
            "noise": ["tracks", "bit depth", "fidelity"]
          },
          {
            "label": "The number of sample points taken per second is called the _____.",
            "answer": "sampling rate",
            "noise": ["pressure", "frequency", "bit depth"]
          },
          {
            "label": "Reducing the number of channels from stereo (two) to mono (one) will _____.",
            "answer":  "decrease the file size by half",
            "noise": ["increase the file size by half", "double the file size", "triple the file size"]
          },
          {
            "label": "The sound wave can be represented graphically with the changes in air pressure or electrical signals plotted over time---a waveform. The _______________ axis represents time.",
            "answer": "horizontal",
            "noise": ["vortex", "vertical", "space"]
          },
          {
            "label": "Sound intensity is often measured in ________________.",
            "answer": "decibels",
            "noise": ["decimals", "dynamic beats", "digital bells"]
          },
          {
            "label": "__________ is a wave that is generated by vibrating objects in a medium such as air.",
            "answer": "Sound",
            "noise": ["Envelope", "Polymorphism", "Nyquist"]
          },
          {
            "label": "__________  _______ means combining multiple audio tracks with effects.",
            "answer": "Mixing Down",
            "noise": ["Fourier transforming", "Run-length encoding", "Quick masking"]

          },
          {
            "label": "What is the most common sampling rate for CD quality audio?",
            "answer": "44,100 Hz",
            "noise": ["11,025 Hz", "96,000 Hz", "22,050 Hz"]
          },
          {
            "label": "What is not considered a general strategy for reducing digital audio file size?",
            "answer": "Increase the sampling rate",
            "noise": ["Reduce the bit depth", "Apply Compression", "Reduce the number of channels"]
          }
        ]
      },
      {
        label: "html",
        "questions": [
          {
            "label": "HTML stands for:  ",
            "answer": "HyperText Markup Language",
            "noise": ["HyperText Music Layer", "HyperText Machine Language", "HyperText Mutator Laser"]
          },
          {
            "label": "URL stands for:  ",
            "answer": "Uniform Resource Locator",
            "noise": ["Uniform Relay Link", "Uniform Resolution Layer", "Uniform Raster Listener"]
          },
          {
            "label": "Dyanmic HTML is not a programming language but a combination of HTML, CSS, and _____________",
            "answer": "JavaScript",
            "noise": ["Java", "JPEGs", "Flash"]
          },
          {
            "label": "A Web ___________ is an application that can display HTML documents in the correct format and layout according to the markup tags.",
            "answer": "Browser" ,
            "noise": ["generator", "raster", "vector"]
          },
          {
            "label": "A file _______ refers to the location of a file on a computer, like an address to a house.",
            "answer": "path",
            "noise": [ "track", "trail", "tag"]
          },
          {
            "label": "CSS stands for:  ",
            "answer":"Cascading Style Sheets",
            "noise": ["Cell Style Sheets", "Common Style Sheets", "Computer Style Sheets"]
          },
          {
            "label": "__________ is a scripting language web pages.",
            "answer": "JavaScript",
            "noise": ["DOCTYPE", "Dreamweaver", "Web Expression"]
          },
          {
            "label": "WYSIWYG stands for:  ",
            "answer": "What You See Is What You Get",
            "noise": ["What You Script Is What You Gamut", "What You Sample Is What You Get", "What You Select Is What You GIF"]
          },
          {
            "label": "The ______ folder is the outermost folder of a website's structure.",
            "answer": "root",
            "noise": ["boot", "moot", "loot"]
          },
          {
            "label": "Which one is an example of a valid HTML comment?",
            "answer": "<!--This is a comment-->",
            "noise": ["010--This is a comment--010", "[This is a comment]", "$$--This is a comment--$$"]
          }
        ]
      }];
  });


function ListCtrl($scope , quizData) {
  $scope.quizes = quizData;
}
function TakeQuiz( $scope , quizData, $routeParams , $location){
  console.log( $routeParams );
  $scope.qId = $routeParams.quizId;
  $scope.quizes = quizData;
  $scope.quiz = _.find(quizData, function(quiz){
    console.log(quiz);
    if( quiz.label === $scope.qId )
      return quiz;
  });
  $scope.nextButtonLabel = "Next";
  $scope.currentQuestionIndex = -1;
  $scope.questionChoices = [];
  var getQuestion = function(){
    console.log( $scope.quiz );
    return $scope.quiz.questions[ $scope.currentQuestionIndex ];
  }
  $scope.currentQuestion = getQuestion();
  console.log( $scope.currentQuestion );
  $scope.showLastScreen = false;
  $scope.nextQuestion = function(){
    console.log( $scope.currentQuestionIndex +"   "+ $scope.quiz.questions.length );
    $scope.currentQuestionIndex ++ ;
    if( $scope.currentQuestionIndex == $scope.quiz.questions.length - 1){
      console.log("last screen");
      $scope.showLastScreen = true;
      $scope.nextButtonLabel = "Submit";
      return;
    }
    if( $scope.currentQuestionIndex > $scope.quiz.questions.length -1 ){
      $scope.showLastScreen = true;
      //send email
      /*$http({method: 'GET', url: '/sendEmail'}).
        success(function(data, status, headers, config) {s
        // this callback will be called asynchronously
        // when the response is available
          console.log( data );
        }).
        error(function(data, status, headers, config) {
          // called asynchronously if an error occurs
          // or server returns response with status
          // code outside of the <200, 400) range
          console.log( data );
        });*/
      console.log("send email");
      $location.path( "/" );
      return;
    }
    $scope.currentQuestion = getQuestion();
    console.log("noise");
    console.log( $scope.currentQuestion.noise );
    console.log("ans");
    console.log( $scope.currentQuestion.answer );
    $scope.questionChoices = _.shuffle( _.union( $scope.currentQuestion.noise , [$scope.currentQuestion.answer] ) );
    console.log( $scope.questionChoices );

  };

  //$scope.nextQuestion();


}